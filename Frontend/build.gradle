//task webpack(type: Exec) {
//    inputs.file("package-lock.json")
//    inputs.dir("app")
//    // inputs.file("webpack.config.js")
//    outputs.dir("$buildDir/js")
//    outputs.cacheIf { true }
//    println("$projectDir")
//    commandLine("$projectDir/node_modules/.bin/webpack.ps1", "app/index.jsx", "$buildDir/js/bundle.js")
//}

task start(type: Exec) {
    inputs.file("package-lock.json").withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.file("webpack.config.js").withPathSensitivity(PathSensitivity.RELATIVE)
    commandLine "./node_modules/.bin/webpack-dev-server", '--mode', 'development', '--devtool', 'inline-source-map', '--hot'
}

task npm_install(type: Exec) {
    commandLine "C:/Program Files/nodejs/npm.cmd", /*"C:/Program Files/nodejs/node_modules/npm/bin/npm-cli.js",*/ "install", "--scripts-prepend-node-path=auto"
    standardOutput = new FileOutputStream("./install.txt")
}

task npm_test(type: Exec) {
    commandLine "npm", 'test'
    standardOutput = new FileOutputStream("./out.txt")
}

// webpack task
task webpack(type: Exec) {
    inputs.file("package-lock.json").withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.file("webpack.config.js").withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.cacheIf { true }
//    workingDir "$projectDir"
    commandLine "webpack", "./ed/components/App.jsx", "./ed/bundle/ed.js"
}

clean {
    delete 'dist'
}

check.dependsOn(test)
assemble.dependsOn(npm_install)
assemble.dependsOn(webpack)
